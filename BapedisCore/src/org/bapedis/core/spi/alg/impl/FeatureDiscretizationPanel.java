/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.bapedis.core.spi.alg.impl;

import javax.swing.JPanel;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import org.bapedis.core.spi.alg.Algorithm;
import org.bapedis.core.spi.alg.AlgorithmSetupUI;
import org.openide.DialogDisplayer;
import org.openide.NotifyDescriptor;
import org.openide.util.NbBundle;

/**
 *
 * @author Loge
 */
public class FeatureDiscretizationPanel extends javax.swing.JPanel implements AlgorithmSetupUI {

    /**
     * Creates new form FeatureDiscretizationPanel
     */
    private FeatureDiscretization discretizationAlg;
    private final NotifyDescriptor errorND;

    public FeatureDiscretizationPanel() {
        initComponents();
        errorND = new NotifyDescriptor.Message(NbBundle.getMessage(FeatureDiscretizationPanel.class, "FeatureDiscretizationPanel.errorND"), NotifyDescriptor.ERROR_MESSAGE);
        
        //Create document listeners
        jTF_value.getDocument().addDocumentListener(new DocumentListener() {

            @Override
            public void insertUpdate(DocumentEvent e) {
                updateNumberOfBins();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                updateNumberOfBins();
            }

            @Override
            public void changedUpdate(DocumentEvent e) {

            }
        });        
    }
    
    private void updateNumberOfBins() {
        try {
            if (!jTF_value.getText().isEmpty()) {
                int value = Integer.parseInt(jTF_value.getText());
                if (discretizationAlg.getBinsOption() == FeatureDiscretization.BinsOption.User_Defined) {
                    discretizationAlg.setNumberOfBins(value);
                }
            }
        } catch (NumberFormatException ex) {
            DialogDisplayer.getDefault().notify(errorND);
        }
    }    

    @Override
    public void setEnabled(boolean enabled) {
        super.setEnabled(enabled); //To change body of generated methods, choose Tools | Templates.

        jLabel1.setEnabled(enabled);
        jComboBox1.setEnabled(enabled);
        
        if (discretizationAlg != null) {
            jTF_value.setEnabled(enabled && discretizationAlg.getBinsOption() == FeatureDiscretization.BinsOption.User_Defined);
        } else{
            jTF_value.setEnabled(false);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jLabel1 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        infoLabel = new javax.swing.JLabel();
        jTF_value = new javax.swing.JTextField();

        setLayout(new java.awt.GridBagLayout());

        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(FeatureDiscretizationPanel.class, "FeatureDiscretizationPanel.jLabel1.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        add(jLabel1, gridBagConstraints);

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "<html>Sturges's rule</html>", "<html>Rice's rule</html>", "<html>User defined value</html>" }));
        jComboBox1.setSelectedIndex(-1);
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        add(jComboBox1, gridBagConstraints);

        infoLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/bapedis/core/resources/info.png"))); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(infoLabel, org.openide.util.NbBundle.getMessage(FeatureDiscretizationPanel.class, "FeatureDiscretizationPanel.infoLabel.text")); // NOI18N
        infoLabel.setToolTipText(org.openide.util.NbBundle.getMessage(FeatureDiscretizationPanel.class, "FeatureDiscretizationPanel.infoLabel.toolTipText")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        add(infoLabel, gridBagConstraints);

        jTF_value.setText(org.openide.util.NbBundle.getMessage(FeatureDiscretizationPanel.class, "FeatureDiscretizationPanel.jTF_value.text")); // NOI18N
        jTF_value.setMinimumSize(new java.awt.Dimension(50, 27));
        jTF_value.setPreferredSize(new java.awt.Dimension(90, 27));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        add(jTF_value, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        switch (jComboBox1.getSelectedIndex()) {
            case 0:
                if (discretizationAlg.getBinsOption() != FeatureDiscretization.BinsOption.Sturges_Rule) {
                    discretizationAlg.setBinsOption(FeatureDiscretization.BinsOption.Sturges_Rule);
                }
                jTF_value.setText("");
                jTF_value.setEnabled(false);
                break;
            case 1:
                if (discretizationAlg.getBinsOption() != FeatureDiscretization.BinsOption.Rice_Rule) {
                    discretizationAlg.setBinsOption(FeatureDiscretization.BinsOption.Rice_Rule);
                }
                jTF_value.setText("");
                jTF_value.setEnabled(false);
                break;
            case 2:
                if (discretizationAlg.getBinsOption() != FeatureDiscretization.BinsOption.User_Defined) {
                    discretizationAlg.setBinsOption(FeatureDiscretization.BinsOption.User_Defined);
                }
                jTF_value.setText(String.valueOf(discretizationAlg.getNumberOfBins()));
                jTF_value.setEnabled(true);
                break;                
            default:
                jTF_value.setText("");
                jTF_value.setEnabled(false);
                
        }
    }//GEN-LAST:event_jComboBox1ActionPerformed

    @Override
    public JPanel getSettingPanel(Algorithm algo) {
        discretizationAlg = (FeatureDiscretization) algo;
        jComboBox1.setSelectedIndex(-1);
        switch (discretizationAlg.getBinsOption()) {
            case Sturges_Rule:
                jComboBox1.setSelectedIndex(0);
                break;
            case Rice_Rule:
                jComboBox1.setSelectedIndex(1);
                break;
            case User_Defined:
                jComboBox1.setSelectedIndex(2);
                break;                
            default:                
                throw new IllegalStateException("Unknown option for the number of bins");
                
        }

        return this;
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel infoLabel;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTextField jTF_value;
    // End of variables declaration//GEN-END:variables
}
