/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.bapedis.core.spi.alg.impl;

import java.awt.event.ItemEvent;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JPanel;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import org.bapedis.core.spi.alg.Algorithm;
import org.bapedis.core.spi.alg.AlgorithmSetupUI;
import org.openide.DialogDisplayer;
import org.openide.NotifyDescriptor;
import org.openide.util.NbBundle;

/**
 *
 * @author loge
 */
public class FeatureSEFilteringPanel extends javax.swing.JPanel implements AlgorithmSetupUI {

    private FeatureSEFiltering algorithm;
    private final NotifyDescriptor errorND;

    public FeatureSEFilteringPanel() {
        initComponents();

        errorND = new NotifyDescriptor.Message(NbBundle.getMessage(FeatureSEFilteringPanel.class, "FeatureSEFilteringPanel.errorND"), NotifyDescriptor.ERROR_MESSAGE);

        //Create document listeners
        jTF_top.getDocument().addDocumentListener(new DocumentListener() {

            @Override
            public void insertUpdate(DocumentEvent e) {
                updateTopRank();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                updateTopRank();
            }

            @Override
            public void changedUpdate(DocumentEvent e) {

            }
        });
    }

    private void updateTopRank() {
        try {
            if (!jTF_top.getText().isEmpty()) {
                int topRank = Integer.parseInt(jTF_top.getText());
                if (algorithm.getTopRank() != topRank) {
                    algorithm.setTopRank(topRank);
                }
            } else {
                algorithm.setTopRank(-1);
            }
        } catch (NumberFormatException ex) {
            DialogDisplayer.getDefault().notify(errorND);
            algorithm.setTopRank(-1);
        }
    }   

    @Override
    public void setEnabled(boolean enabled) {
        super.setEnabled(enabled); //To change body of generated methods, choose Tools | Templates.
        centerPanel.setEnabled(enabled);
        
        jcbSelectTop.setEnabled(enabled);
        jTF_top.setEnabled(jcbSelectTop.isSelected() && enabled);
        
        uselessPanel.setEnabled(enabled);
        jLabel1.setEnabled(enabled);
        jLabel2.setEnabled(enabled);
        infoLabel1.setEnabled(enabled);
        jrankingComboBox.setEnabled(enabled);
        jSpinnerEntropy.setEnabled(enabled);
        
        redundancyPanel.setEnabled(enabled);
        jLabel3.setEnabled(enabled);
        jLabel4.setEnabled(enabled);
        corrComboBox.setEnabled(enabled);
        jSpinnerCorrelation.setEnabled(enabled);
        infoLabel2.setEnabled(enabled);
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        buttonGroup1 = new javax.swing.ButtonGroup();
        centerPanel = new javax.swing.JPanel();
        jcbSelectTop = new javax.swing.JCheckBox();
        jTF_top = new javax.swing.JTextField();
        uselessPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jSpinnerEntropy = new javax.swing.JSpinner();
        jLabel2 = new javax.swing.JLabel();
        jrankingComboBox = new javax.swing.JComboBox<>();
        infoLabel1 = new javax.swing.JLabel();
        redundancyPanel = new javax.swing.JPanel();
        corrComboBox = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jSpinnerCorrelation = new javax.swing.JSpinner();
        infoLabel2 = new javax.swing.JLabel();
        extLabel = new javax.swing.JLabel();

        setMinimumSize(new java.awt.Dimension(440, 380));
        setLayout(new java.awt.BorderLayout());

        centerPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(FeatureSEFilteringPanel.class, "FeatureSEFilteringPanel.centerPanel.border.title"))); // NOI18N
        centerPanel.setLayout(new java.awt.GridBagLayout());

        org.openide.awt.Mnemonics.setLocalizedText(jcbSelectTop, org.openide.util.NbBundle.getMessage(FeatureSEFilteringPanel.class, "FeatureSEFilteringPanel.jcbSelectTop.text")); // NOI18N
        jcbSelectTop.setPreferredSize(new java.awt.Dimension(120, 27));
        jcbSelectTop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbSelectTopActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 0);
        centerPanel.add(jcbSelectTop, gridBagConstraints);

        jTF_top.setText(org.openide.util.NbBundle.getMessage(FeatureSEFilteringPanel.class, "FeatureSEFilteringPanel.jTF_top.text")); // NOI18N
        jTF_top.setPreferredSize(new java.awt.Dimension(90, 27));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 0);
        centerPanel.add(jTF_top, gridBagConstraints);

        uselessPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(FeatureSEFilteringPanel.class, "FeatureSEFilteringPanel.uselessPanel.border.title"))); // NOI18N
        uselessPanel.setLayout(new java.awt.GridBagLayout());

        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(FeatureSEFilteringPanel.class, "FeatureSEFilteringPanel.jLabel1.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 0);
        uselessPanel.add(jLabel1, gridBagConstraints);
        jLabel1.getAccessibleContext().setAccessibleName(org.openide.util.NbBundle.getMessage(FeatureSEFilteringPanel.class, "FeatureSEFilteringPanel.jLabel1.AccessibleContext.accessibleName")); // NOI18N

        jSpinnerEntropy.setModel(new javax.swing.SpinnerNumberModel(10, 0, 100, 1));
        jSpinnerEntropy.setPreferredSize(new java.awt.Dimension(50, 27));
        jSpinnerEntropy.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinnerEntropyStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 0);
        uselessPanel.add(jSpinnerEntropy, gridBagConstraints);

        org.openide.awt.Mnemonics.setLocalizedText(jLabel2, org.openide.util.NbBundle.getMessage(FeatureSEFilteringPanel.class, "FeatureSEFilteringPanel.jLabel2.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        uselessPanel.add(jLabel2, gridBagConstraints);

        jrankingComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Shannon Entropy" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        uselessPanel.add(jrankingComboBox, gridBagConstraints);

        infoLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/bapedis/core/resources/info.png"))); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(infoLabel1, org.openide.util.NbBundle.getMessage(FeatureSEFilteringPanel.class, "FeatureSEFilteringPanel.infoLabel1.text")); // NOI18N
        infoLabel1.setToolTipText(org.openide.util.NbBundle.getMessage(FeatureSEFilteringPanel.class, "FeatureSEFilteringPanel.infoLabel1.toolTipText")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 0);
        uselessPanel.add(infoLabel1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        centerPanel.add(uselessPanel, gridBagConstraints);

        redundancyPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(FeatureSEFilteringPanel.class, "FeatureSEFilteringPanel.redundancyPanel.border.title"))); // NOI18N
        redundancyPanel.setLayout(new java.awt.GridBagLayout());

        corrComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", "Pearson", "Spearman" }));
        corrComboBox.setSelectedIndex(2);
        corrComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                corrComboBoxItemStateChanged(evt);
            }
        });
        corrComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                corrComboBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        redundancyPanel.add(corrComboBox, gridBagConstraints);

        org.openide.awt.Mnemonics.setLocalizedText(jLabel4, org.openide.util.NbBundle.getMessage(FeatureSEFilteringPanel.class, "FeatureSEFilteringPanel.jLabel4.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 0);
        redundancyPanel.add(jLabel4, gridBagConstraints);

        org.openide.awt.Mnemonics.setLocalizedText(jLabel3, org.openide.util.NbBundle.getMessage(FeatureSEFilteringPanel.class, "FeatureSEFilteringPanel.jLabel3.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        redundancyPanel.add(jLabel3, gridBagConstraints);

        jSpinnerCorrelation.setModel(new javax.swing.SpinnerNumberModel(0.9d, 0.0d, 1.0d, 0.01d));
        jSpinnerCorrelation.setPreferredSize(new java.awt.Dimension(60, 27));
        jSpinnerCorrelation.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinnerCorrelationStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 0);
        redundancyPanel.add(jSpinnerCorrelation, gridBagConstraints);

        infoLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/bapedis/core/resources/info.png"))); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(infoLabel2, org.openide.util.NbBundle.getMessage(FeatureSEFilteringPanel.class, "FeatureSEFilteringPanel.infoLabel2.text")); // NOI18N
        infoLabel2.setToolTipText(org.openide.util.NbBundle.getMessage(FeatureSEFilteringPanel.class, "FeatureSEFilteringPanel.infoLabel2.toolTipText")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 0);
        redundancyPanel.add(infoLabel2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        centerPanel.add(redundancyPanel, gridBagConstraints);

        org.openide.awt.Mnemonics.setLocalizedText(extLabel, org.openide.util.NbBundle.getMessage(FeatureSEFilteringPanel.class, "FeatureSEFilteringPanel.extLabel.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        centerPanel.add(extLabel, gridBagConstraints);

        add(centerPanel, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void corrComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_corrComboBoxActionPerformed
        if (algorithm != null && algorithm.getCorrelationOption()!= corrComboBox.getSelectedIndex()) {
            algorithm.setCorrelationOption(corrComboBox.getSelectedIndex());
        }
    }//GEN-LAST:event_corrComboBoxActionPerformed

    private void corrComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_corrComboBoxItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            boolean enable = corrComboBox.getSelectedIndex() != FeatureSEFiltering.CORRELATION_NONE;
            jSpinnerCorrelation.setEnabled(enable);
            jLabel4.setEnabled(enable);
            infoLabel2.setEnabled(enable);
        }
    }//GEN-LAST:event_corrComboBoxItemStateChanged

    private void jcbSelectTopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbSelectTopActionPerformed
        algorithm.setSelectTop(jcbSelectTop.isSelected());
        jTF_top.setEnabled(jcbSelectTop.isSelected());
    }//GEN-LAST:event_jcbSelectTopActionPerformed

    private void jSpinnerEntropyStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinnerEntropyStateChanged
        int threshold = (int)jSpinnerEntropy.getModel().getValue();
        algorithm.setThresholdPercent(threshold);
    }//GEN-LAST:event_jSpinnerEntropyStateChanged

    private void jSpinnerCorrelationStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinnerCorrelationStateChanged
        double threshold = (double)jSpinnerCorrelation.getModel().getValue();
        algorithm.setCorrelationCutoff(threshold);
    }//GEN-LAST:event_jSpinnerCorrelationStateChanged

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JPanel centerPanel;
    private javax.swing.JComboBox<String> corrComboBox;
    private javax.swing.JLabel extLabel;
    private javax.swing.JLabel infoLabel1;
    private javax.swing.JLabel infoLabel2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JSpinner jSpinnerCorrelation;
    private javax.swing.JSpinner jSpinnerEntropy;
    private javax.swing.JTextField jTF_top;
    private javax.swing.JCheckBox jcbSelectTop;
    private javax.swing.JComboBox<String> jrankingComboBox;
    private javax.swing.JPanel redundancyPanel;
    private javax.swing.JPanel uselessPanel;
    // End of variables declaration//GEN-END:variables


    @Override
    public JPanel getSettingPanel(Algorithm algo) {
        this.algorithm = (FeatureSEFiltering) algo;
        jcbSelectTop.setSelected(algorithm.isSelectTop());
        jTF_top.setText(String.valueOf(algorithm.getTopRank()));
        jTF_top.setEnabled(jcbSelectTop.isSelected());
        corrComboBox.setSelectedIndex(algorithm.getCorrelationOption());
        int entropyThreshold = algorithm.getThresholdPercent();
        double corrThreshold = algorithm.getCorrelationCutoff();
        
        return this;
    }

}
