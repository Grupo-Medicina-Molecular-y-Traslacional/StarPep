/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.bapedis.core.spi.alg.impl;

import java.awt.BorderLayout;
import javax.swing.JPanel;
import org.bapedis.core.spi.alg.Algorithm;
import org.bapedis.core.spi.alg.AlgorithmSetupUI;

/**
 *
 * @author Loge
 */
public class FeatureSubsetOptimizationSetupUI extends javax.swing.JPanel implements AlgorithmSetupUI {

    /**
     * Creates new form FeatureSubsetOptimizationSetupUI
     */
    private FeatureSubsetOptimization optimizationAlg;
    private JPanel discretizationPanel;    
    
    public FeatureSubsetOptimizationSetupUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        preprocessingPanel = new javax.swing.JPanel();
        strategyPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jStrategyComboBox = new javax.swing.JComboBox<>();
        info = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jDirectionComboBox = new javax.swing.JComboBox<>();
        extLabel = new javax.swing.JLabel();

        setLayout(new java.awt.GridBagLayout());

        preprocessingPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(FeatureSubsetOptimizationSetupUI.class, "FeatureSubsetOptimizationSetupUI.preprocessingPanel.border.title"))); // NOI18N
        preprocessingPanel.setLayout(new java.awt.BorderLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        add(preprocessingPanel, gridBagConstraints);

        strategyPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(FeatureSubsetOptimizationSetupUI.class, "FeatureSubsetOptimizationSetupUI.strategyPanel.border.title"))); // NOI18N
        strategyPanel.setLayout(new java.awt.GridBagLayout());

        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(FeatureSubsetOptimizationSetupUI.class, "FeatureSubsetOptimizationSetupUI.jLabel1.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        strategyPanel.add(jLabel1, gridBagConstraints);

        jStrategyComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Greedy hill-climbing search" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        strategyPanel.add(jStrategyComboBox, gridBagConstraints);

        info.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/bapedis/core/resources/info.png"))); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(info, org.openide.util.NbBundle.getMessage(FeatureSubsetOptimizationSetupUI.class, "FeatureSubsetOptimizationSetupUI.info.text")); // NOI18N
        info.setToolTipText(org.openide.util.NbBundle.getMessage(FeatureSubsetOptimizationSetupUI.class, "FeatureSubsetOptimizationSetupUI.info.toolTipText")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        strategyPanel.add(info, gridBagConstraints);

        org.openide.awt.Mnemonics.setLocalizedText(jLabel2, org.openide.util.NbBundle.getMessage(FeatureSubsetOptimizationSetupUI.class, "FeatureSubsetOptimizationSetupUI.jLabel2.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        strategyPanel.add(jLabel2, gridBagConstraints);

        jDirectionComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Forward", "Backward" }));
        jDirectionComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jDirectionComboBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        strategyPanel.add(jDirectionComboBox, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        add(strategyPanel, gridBagConstraints);

        org.openide.awt.Mnemonics.setLocalizedText(extLabel, org.openide.util.NbBundle.getMessage(FeatureSubsetOptimizationSetupUI.class, "FeatureSubsetOptimizationSetupUI.extLabel.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(extLabel, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void jDirectionComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jDirectionComboBoxActionPerformed
        switch(jDirectionComboBox.getSelectedIndex()){
            case 0:
                optimizationAlg.setDirection(FeatureSubsetOptimization.Direction.Forward);
                break;
            case 1:
                optimizationAlg.setDirection(FeatureSubsetOptimization.Direction.Backward);
                break;
            default:
                optimizationAlg.setDirection(null);
        }
    }//GEN-LAST:event_jDirectionComboBoxActionPerformed

    @Override
    public void setEnabled(boolean enabled) {
        if (discretizationPanel != null){
            discretizationPanel.setEnabled(enabled);
        }
        preprocessingPanel.setEnabled(enabled);
        
        strategyPanel.setEnabled(enabled);
        jLabel1.setEnabled(enabled);
        jLabel2.setEnabled(enabled);
        jStrategyComboBox.setEnabled(enabled);
        jDirectionComboBox.setEnabled(enabled);
        info.setEnabled(enabled);
    }

    
    private void setupPreprocessingPanel(FeatureDiscretization alg){
        discretizationPanel = alg.getFactory().getSetupUI().getSettingPanel(alg);
        preprocessingPanel.removeAll();
        preprocessingPanel.add(discretizationPanel, BorderLayout.CENTER);
        preprocessingPanel.revalidate();
        preprocessingPanel.repaint();   
    }
    
    @Override
    public JPanel getSettingPanel(Algorithm algo) {
        optimizationAlg = (FeatureSubsetOptimization) algo;
        
        //Discretization algorithm        
        setupPreprocessingPanel(optimizationAlg.getPreprocessingAlg());
        
        switch(optimizationAlg.getDirection()){
            case Forward:
                jDirectionComboBox.setSelectedIndex(0);
                break;
            case Backward:
                jDirectionComboBox.setSelectedIndex(1);
                break;
            default:
                jDirectionComboBox.setSelectedIndex(-1);
        }
        return this;
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel extLabel;
    private javax.swing.JLabel info;
    private javax.swing.JComboBox<String> jDirectionComboBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JComboBox<String> jStrategyComboBox;
    private javax.swing.JPanel preprocessingPanel;
    private javax.swing.JPanel strategyPanel;
    // End of variables declaration//GEN-END:variables
}
