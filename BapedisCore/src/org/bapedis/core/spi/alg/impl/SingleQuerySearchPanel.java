/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.bapedis.core.spi.alg.impl;

import java.beans.PropertyChangeSupport;
import javax.swing.JPanel;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import org.bapedis.core.spi.alg.Algorithm;
import org.bapedis.core.spi.alg.AlgorithmSetupUI;
import org.biojava.nbio.core.exceptions.CompoundNotFoundException;
import org.biojava.nbio.core.sequence.ProteinSequence;
import org.biojava.nbio.core.sequence.compound.AminoAcidCompoundSet;
import org.openide.util.Exceptions;
import org.openide.util.NbBundle;

/**
 *
 * @author loge
 */
public class SingleQuerySearchPanel extends javax.swing.JPanel implements AlgorithmSetupUI {


    protected final PropertyChangeSupport changeSupport;
    protected SingleQuerySearch searchAlg;
    protected final AminoAcidCompoundSet compoundSet;

    /**
     * Creates new form SeqAlignmentFilterSetupUI
     */
    public SingleQuerySearchPanel() {
        initComponents();

        changeSupport = new PropertyChangeSupport(this);
        jErrorLabel.setText(" ");
        compoundSet = AminoAcidCompoundSet.getAminoAcidCompoundSet();
        jSeqTextArea.getDocument().addDocumentListener(new DocumentListener() {

            @Override
            public void insertUpdate(DocumentEvent e) {
                updateValidState();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                updateValidState();
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
            }
        });
    }


    private void updateValidState() {
        String seq = jSeqTextArea.getText();
        boolean validState = seq.length() > 0;
        String aa;
        jErrorLabel.setText(" ");
        for (int i = 0; i < seq.length() && validState; i++) {
            aa = seq.substring(i, i + 1);
            if (compoundSet.getCompoundForString(aa) == null) {
                jErrorLabel.setText(NbBundle.getMessage(SingleQuerySearchPanel.class, "SequenceSearchSetupUI.jErrorLabel.text", aa));
                validState = false;
            }
        }
        if (searchAlg != null) {
            if (validState) {
                try {
                    searchAlg.setQuery(new ProteinSequence(jSeqTextArea.getText()));
                } catch (CompoundNotFoundException ex) {
                    Exceptions.printStackTrace(ex);
                }
            } else {
                searchAlg.setQuery(null);
            }
        }
    }

    @Override
    public void setEnabled(boolean enabled) {
        jLabel1.setEnabled(enabled);
        jseqPane.setEnabled(enabled);
        jSeqTextArea.setEnabled(enabled);
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jLabel1 = new javax.swing.JLabel();
        jseqPane = new javax.swing.JScrollPane();
        jSeqTextArea = new javax.swing.JTextArea();
        jErrorLabel = new javax.swing.JLabel();

        setMinimumSize(new java.awt.Dimension(460, 300));
        setPreferredSize(new java.awt.Dimension(460, 300));
        setLayout(new java.awt.GridBagLayout());

        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(SingleQuerySearchPanel.class, "SingleQuerySearchPanel.jLabel1.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        add(jLabel1, gridBagConstraints);

        jSeqTextArea.setColumns(20);
        jSeqTextArea.setLineWrap(true);
        jSeqTextArea.setRows(5);
        jSeqTextArea.setWrapStyleWord(true);
        jseqPane.setViewportView(jSeqTextArea);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 0, 0);
        add(jseqPane, gridBagConstraints);

        jErrorLabel.setForeground(new java.awt.Color(255, 0, 0));
        org.openide.awt.Mnemonics.setLocalizedText(jErrorLabel, org.openide.util.NbBundle.getMessage(SingleQuerySearchPanel.class, "SingleQuerySearchPanel.jErrorLabel.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        add(jErrorLabel, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    @Override
    public JPanel getSettingPanel(Algorithm algo) {
        searchAlg = (SingleQuerySearch) algo;
        ProteinSequence seq = searchAlg.getQuery();
        jSeqTextArea.setText(seq != null ? seq.getSequenceAsString() : "");
        return this;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jErrorLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTextArea jSeqTextArea;
    private javax.swing.JScrollPane jseqPane;
    // End of variables declaration//GEN-END:variables
}
