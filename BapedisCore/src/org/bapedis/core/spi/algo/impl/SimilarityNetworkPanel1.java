/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.bapedis.core.spi.algo.impl;

import java.awt.Component;
import java.util.Iterator;
import javax.swing.Icon;
import javax.swing.JTree;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeCellRenderer;
import javax.swing.tree.DefaultTreeModel;
import javax.swing.tree.TreePath;
import org.bapedis.core.model.AlgorithmCategory;
import org.bapedis.core.project.ProjectManager;
import org.bapedis.core.spi.algo.AlgorithmFactory;
import org.openide.util.ImageUtilities;
import org.openide.util.Lookup;

/**
 *
 * @author loge
 */
public class SimilarityNetworkPanel1 extends javax.swing.JPanel {

    public static final String NETWORK_FACTORY = "network_factory";
    DefaultMutableTreeNode treeNode;

    /**
     * Creates new form SimilarityNetworkPanel1
     */
    public SimilarityNetworkPanel1() {
        initComponents();
        treeNode = new DefaultMutableTreeNode("Network type", true);
        populateJTree();
        jTree1.setModel(new DefaultTreeModel(treeNode));
        jTree1.setRootVisible(true);
        jTree1.setCellRenderer(new AlgorithmFactoryNodeRenderer());
    }

    private void populateJTree() {
        ProjectManager pc = Lookup.getDefault().lookup(ProjectManager.class);
        DefaultMutableTreeNode factoryNode;
        for (Iterator<? extends AlgorithmFactory> it = pc.getAlgorithmFactoryIterator(); it.hasNext();) {
            final AlgorithmFactory factory = it.next();
            if (factory.getCategory() == AlgorithmCategory.SimilarityNetwork) {
                factoryNode = new AlgorithmFactoryTreeNode(factory);
                treeNode.add(factoryNode);
            }
        }
    }

    public AlgorithmFactory getAlgorithmFactory() {
        TreePath path = jTree1.getSelectionPath();
        if (path != null) {
            AlgorithmFactoryTreeNode node = (AlgorithmFactoryTreeNode) path.getLastPathComponent();
            return node.getFactory();
        }
        return null;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jScrollPane1 = new javax.swing.JScrollPane();
        jTree1 = new javax.swing.JTree();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();

        setLayout(new java.awt.GridBagLayout());

        jTree1.setRootVisible(false);
        jTree1.addTreeSelectionListener(new javax.swing.event.TreeSelectionListener() {
            public void valueChanged(javax.swing.event.TreeSelectionEvent evt) {
                jTree1ValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(jTree1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(jScrollPane1, gridBagConstraints);

        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(SimilarityNetworkPanel1.class, "SimilarityNetworkPanel1.jLabel1.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(2, 5, 0, 0);
        add(jLabel1, gridBagConstraints);

        org.openide.awt.Mnemonics.setLocalizedText(jLabel2, org.openide.util.NbBundle.getMessage(SimilarityNetworkPanel1.class, "SimilarityNetworkPanel1.jLabel2.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(2, 5, 0, 0);
        add(jLabel2, gridBagConstraints);

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setLineWrap(true);
        jTextArea1.setRows(5);
        jTextArea1.setWrapStyleWord(true);
        jScrollPane2.setViewportView(jTextArea1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(jScrollPane2, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void jTree1ValueChanged(javax.swing.event.TreeSelectionEvent evt) {//GEN-FIRST:event_jTree1ValueChanged
        TreePath newPath = evt.getNewLeadSelectionPath();

        if (newPath != null && newPath.getLastPathComponent() instanceof AlgorithmFactoryTreeNode) {
            AlgorithmFactoryTreeNode newNode = (AlgorithmFactoryTreeNode) newPath.getLastPathComponent();
            AlgorithmFactory factory = newNode.getFactory();
            jTextArea1.setText(factory.getDescription());
            firePropertyChange(NETWORK_FACTORY, null, factory);
        } else{            
            jTextArea1.setText("");
            firePropertyChange(NETWORK_FACTORY, null, null);
        }

    }//GEN-LAST:event_jTree1ValueChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTree jTree1;
    // End of variables declaration//GEN-END:variables

    private static class AlgorithmFactoryTreeNode extends DefaultMutableTreeNode {

        public AlgorithmFactoryTreeNode(AlgorithmFactory factory) {
            super(factory, false);
        }

        public AlgorithmFactory getFactory() {
            return (AlgorithmFactory) userObject;
        }

        @Override
        public String toString() {
            return getFactory().getName();
        }

    }

    private static class AlgorithmFactoryNodeRenderer extends DefaultTreeCellRenderer {

        Icon icon;

        public AlgorithmFactoryNodeRenderer() {
            icon = ImageUtilities.loadImageIcon("org/bapedis/core/resources/network.png", false);
        }

        @Override
        public Component getTreeCellRendererComponent(
                JTree tree,
                Object value,
                boolean sel,
                boolean expanded,
                boolean leaf,
                int row,
                boolean hasFocus) {

            super.getTreeCellRendererComponent(
                    tree, value, sel,
                    expanded, leaf, row,
                    hasFocus);
            DefaultMutableTreeNode node = (DefaultMutableTreeNode)value;
            if (! (node instanceof AlgorithmFactoryTreeNode)){
                // Root node
               setIcon(icon);
            }                        
            return this;
        }
    }
}
