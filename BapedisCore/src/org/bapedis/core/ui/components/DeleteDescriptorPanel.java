/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.bapedis.core.ui.components;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.util.Set;
import java.util.concurrent.ExecutionException;
import javax.swing.SwingConstants;
import javax.swing.SwingWorker;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.table.TableModel;
import org.bapedis.core.model.AttributesModel;
import org.bapedis.core.model.MolecularDescriptor;
import org.bapedis.core.model.Workspace;
import org.bapedis.core.task.ProgressTicket;
import org.jdesktop.swingx.JXBusyLabel;
import org.openide.DialogDisplayer;
import org.openide.util.Cancellable;
import org.openide.util.Exceptions;
import org.openide.util.NbBundle;

/**
 *
 * @author loge
 */
public class DeleteDescriptorPanel extends javax.swing.JPanel {
    
    protected final DescriptorSelectionPanel selectionPanel;
    protected final JXBusyLabel busyLabel;
    protected final AttributesModel attrModel;
    protected final Workspace workspace;
    
    public DeleteDescriptorPanel(AttributesModel attrModel, Workspace workspace) {
        initComponents();
        this.attrModel = attrModel;
        this.workspace = workspace;
        
        selectionPanel = new DescriptorSelectionPanel(attrModel, Color.RED);
        selectionPanel.removeDescriptorRow(MolecularDescriptor.DEFAULT_CATEGORY);
        
        centerPanel.add(selectionPanel, BorderLayout.CENTER);
        
        busyLabel = new JXBusyLabel(new Dimension(20, 20));
        busyLabel.setText(NbBundle.getMessage(DeleteDescriptorPanel.class, "DeleteDescriptorPanel.deleting.text"));
        busyLabel.setHorizontalAlignment(SwingConstants.CENTER);
        busyLabel.setBusy(false);
        busyLabel.setVisible(false);
        rightPanel.add(busyLabel);
        
        deleteButton.setEnabled(false);
        
        selectionPanel.addTableModelListener(new TableModelListener() {
            @Override
            public void tableChanged(TableModelEvent e) {
                TableModel model = (TableModel) e.getSource();
                boolean flag = false;
                for (int row = 0; row < model.getRowCount(); row++) {
                    if ((boolean) model.getValueAt(row, 0)) {
                        flag = true;
                        break;
                    }
                }
                deleteButton.setEnabled(flag);
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        rightPanel = new javax.swing.JPanel();
        deleteButton = new javax.swing.JButton();
        centerPanel = new javax.swing.JPanel();

        setMinimumSize(new java.awt.Dimension(440, 380));
        setPreferredSize(new java.awt.Dimension(540, 380));
        setLayout(new java.awt.GridBagLayout());

        rightPanel.setMaximumSize(new java.awt.Dimension(110, 58));
        rightPanel.setMinimumSize(new java.awt.Dimension(110, 58));
        rightPanel.setPreferredSize(new java.awt.Dimension(110, 58));
        rightPanel.setLayout(new javax.swing.BoxLayout(rightPanel, javax.swing.BoxLayout.Y_AXIS));

        deleteButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/bapedis/core/resources/delete.png"))); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(deleteButton, org.openide.util.NbBundle.getMessage(DeleteDescriptorPanel.class, "DeleteDescriptorPanel.deleteButton.text")); // NOI18N
        deleteButton.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        deleteButton.setMaximumSize(new java.awt.Dimension(99, 29));
        deleteButton.setMinimumSize(new java.awt.Dimension(99, 29));
        deleteButton.setPreferredSize(new java.awt.Dimension(99, 29));
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });
        rightPanel.add(deleteButton);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(10, 5, 0, 0);
        add(rightPanel, gridBagConstraints);

        centerPanel.setMinimumSize(new java.awt.Dimension(275, 10));
        centerPanel.setPreferredSize(new java.awt.Dimension(275, 100));
        centerPanel.setLayout(new java.awt.BorderLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        add(centerPanel, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        if (workspace.isBusy()) {
            DialogDisplayer.getDefault().notify(workspace.getBusyNotifyDescriptor());
        } else {
            SwingWorker<Void, Void> sw = new SwingWorker() {
                private boolean stopRun = false;
                ProgressTicket ticket = new ProgressTicket(NbBundle.getMessage(DeleteDescriptorPanel.class, "DeleteDescriptorPanel.deleting.task"), new Cancellable() {
                    @Override
                    public boolean cancel() {
                        stopRun = true;                        
                        return true;
                    }
                });
                
                @Override
                protected Void doInBackground() throws Exception {
                    Set<String> keys = selectionPanel.getSelectedDescriptorKeys();
                    ticket.start(keys.size());
                    for (String key : keys) {
                        if (!stopRun) {
                            if (attrModel.hasMolecularDescriptors(key)) {
                                attrModel.deleteAllMolecularDescriptors(key);
                            }
                            ticket.progress();
                        }
                    }
                    return null;
                }
                
                @Override
                protected void done() {
                    try {
                        get();
                    } catch (InterruptedException | ExecutionException ex) {
                        Exceptions.printStackTrace(ex);
                    } finally {
                        busyLabel.setBusy(false);
                        busyLabel.setVisible(false);
                        workspace.setBusy(false);
                        ticket.finish();
                    }
                }
            };
            workspace.setBusy(true);
            busyLabel.setBusy(true);
            busyLabel.setVisible(true);
            deleteButton.setEnabled(false);            
            sw.execute();
        }
    }//GEN-LAST:event_deleteButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel centerPanel;
    private javax.swing.JButton deleteButton;
    private javax.swing.JPanel rightPanel;
    // End of variables declaration//GEN-END:variables
}
