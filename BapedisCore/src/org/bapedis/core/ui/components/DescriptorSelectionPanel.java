/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.bapedis.core.ui.components;

import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JButton;
import javax.swing.JList;
import org.bapedis.core.model.AttributesModel;
import org.bapedis.core.model.PeptideAttribute;
import org.bapedis.core.ui.GraphElementNavigator;
import org.jdesktop.swingx.JXList;
import org.openide.util.ImageUtilities;
import org.openide.util.NbBundle;

/**
 *
 * @author loge
 */
public class DescriptorSelectionPanel extends javax.swing.JPanel {

    protected final JList<PeptideAttribute> leftList, rightList;
    protected final DefaultListModel<PeptideAttribute> leftListModel, rightListModel;
    protected final AttributesModel attrModel;
    protected final JButton findButton;

    /**
     * Creates new form DescriptorSelectionPanel
     *
     * @param attrModel
     */
    public DescriptorSelectionPanel(AttributesModel attrModel) {
        initComponents();
        this.attrModel = attrModel;
        leftListModel = new DefaultListModel<>();
        rightListModel = new DefaultListModel<>();
        leftList = new JXList(leftListModel);
        leftScrollPane.setViewportView(leftList);
        rightList = new JList<>(rightListModel);
        rightScrollPane.setViewportView(rightList);

        findButton = new JButton(leftList.getActionMap().get("find"));
        findButton.setText("");
        findButton.setToolTipText(NbBundle.getMessage(DescriptorSelectionPanel.class, "DescriptorSelectionPanel.findButton.toolTipText"));
        findButton.setIcon(ImageUtilities.loadImageIcon("org/bapedis/core/resources/search.png", false));
        findButton.setFocusable(false);

        leftToolBar.add(findButton);
    }

    private void addToDisplayedColumns() {
        int[] indices = leftList.getSelectedIndices();
        for (int i = 0; i < indices.length && attrModel.canAddAvailableColumn(); i++) {
            attrModel.addAvailableColumn(leftListModel.get(indices[i]));
        }
        infoLabel.setVisible(!attrModel.canAddAvailableColumn());
    }

    private void removeFromDisplayedColumns() {
        int[] indices = rightList.getSelectedIndices();
        for (int i = 0; i < indices.length; i++) {
            attrModel.removeAvailableColumn(rightListModel.get(indices[i]));
        }
        infoLabel.setVisible(!attrModel.canAddAvailableColumn());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        descriptorComboBox = new javax.swing.JComboBox<>();
        leftScrollPane = new javax.swing.JScrollPane();
        leftUpperPanel = new javax.swing.JPanel();
        infoLabel = new javax.swing.JLabel();
        rightScrollPane = new javax.swing.JScrollPane();
        controlToolBar = new javax.swing.JToolBar();
        addToDisplayButton = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JToolBar.Separator();
        removeFromDisplayButton = new javax.swing.JButton();
        sizeLabel = new javax.swing.JLabel();
        leftToolBar = new javax.swing.JToolBar();

        setMinimumSize(new java.awt.Dimension(600, 480));
        setPreferredSize(new java.awt.Dimension(600, 480));
        setLayout(new java.awt.GridBagLayout());

        descriptorComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        descriptorComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                descriptorComboBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 5, 0, 0);
        add(descriptorComboBox, gridBagConstraints);

        leftScrollPane.setMinimumSize(new java.awt.Dimension(275, 23));
        leftScrollPane.setPreferredSize(new java.awt.Dimension(275, 23));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        add(leftScrollPane, gridBagConstraints);

        leftUpperPanel.setLayout(new java.awt.GridBagLayout());

        infoLabel.setFont(new java.awt.Font("Ubuntu", 0, 12)); // NOI18N
        infoLabel.setForeground(java.awt.Color.red);
        org.openide.awt.Mnemonics.setLocalizedText(infoLabel, org.openide.util.NbBundle.getMessage(DescriptorSelectionPanel.class, "DescriptorSelectionPanel.infoLabel.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 0);
        leftUpperPanel.add(infoLabel, gridBagConstraints);

        rightScrollPane.setMinimumSize(new java.awt.Dimension(275, 23));
        rightScrollPane.setPreferredSize(new java.awt.Dimension(275, 90));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        leftUpperPanel.add(rightScrollPane, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        add(leftUpperPanel, gridBagConstraints);

        controlToolBar.setFloatable(false);
        controlToolBar.setOrientation(javax.swing.SwingConstants.VERTICAL);
        controlToolBar.setRollover(true);
        controlToolBar.setMinimumSize(new java.awt.Dimension(40, 102));
        controlToolBar.setPreferredSize(new java.awt.Dimension(40, 102));

        addToDisplayButton.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        addToDisplayButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/bapedis/core/resources/arrow.png"))); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(addToDisplayButton, org.openide.util.NbBundle.getMessage(DescriptorSelectionPanel.class, "DescriptorSelectionPanel.addToDisplayButton.text")); // NOI18N
        addToDisplayButton.setToolTipText(org.openide.util.NbBundle.getMessage(DescriptorSelectionPanel.class, "DescriptorSelectionPanel.addToDisplayButton.toolTipText")); // NOI18N
        addToDisplayButton.setFocusable(false);
        addToDisplayButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        addToDisplayButton.setMaximumSize(new java.awt.Dimension(50, 21));
        addToDisplayButton.setMinimumSize(new java.awt.Dimension(23, 21));
        addToDisplayButton.setPreferredSize(new java.awt.Dimension(50, 21));
        addToDisplayButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        addToDisplayButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addToDisplayButtonActionPerformed(evt);
            }
        });
        controlToolBar.add(addToDisplayButton);
        controlToolBar.add(jSeparator1);

        removeFromDisplayButton.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        removeFromDisplayButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/bapedis/core/resources/arrow-180.png"))); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(removeFromDisplayButton, org.openide.util.NbBundle.getMessage(DescriptorSelectionPanel.class, "DescriptorSelectionPanel.removeFromDisplayButton.text")); // NOI18N
        removeFromDisplayButton.setToolTipText(org.openide.util.NbBundle.getMessage(DescriptorSelectionPanel.class, "DescriptorSelectionPanel.removeFromDisplayButton.toolTipText")); // NOI18N
        removeFromDisplayButton.setFocusable(false);
        removeFromDisplayButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        removeFromDisplayButton.setMaximumSize(new java.awt.Dimension(50, 21));
        removeFromDisplayButton.setMinimumSize(new java.awt.Dimension(23, 21));
        removeFromDisplayButton.setPreferredSize(new java.awt.Dimension(50, 21));
        removeFromDisplayButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        removeFromDisplayButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeFromDisplayButtonActionPerformed(evt);
            }
        });
        controlToolBar.add(removeFromDisplayButton);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.weighty = 1.0;
        add(controlToolBar, gridBagConstraints);

        sizeLabel.setFont(new java.awt.Font("Ubuntu", 0, 12)); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(sizeLabel, org.openide.util.NbBundle.getMessage(DescriptorSelectionPanel.class, "DescriptorSelectionPanel.sizeLabel.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        add(sizeLabel, gridBagConstraints);

        leftToolBar.setRollover(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        add(leftToolBar, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void addToDisplayButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addToDisplayButtonActionPerformed
        addToDisplayedColumns();
    }//GEN-LAST:event_addToDisplayButtonActionPerformed

    private void removeFromDisplayButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeFromDisplayButtonActionPerformed
        removeFromDisplayedColumns();
    }//GEN-LAST:event_removeFromDisplayButtonActionPerformed

    private void descriptorComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_descriptorComboBoxActionPerformed
        leftListModel.clear();
        for (Iterator<PeptideAttribute> it = attrModel.getAttributeIterator(); it.hasNext();) {
            PeptideAttribute attr = it.next();
            if (attr.isMolecularDescriptor() && !attrModel.getAvailableColumnsModel().contains(attr)) {
                leftListModel.addElement(attr);
            }
        }        
    }//GEN-LAST:event_descriptorComboBoxActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addToDisplayButton;
    private javax.swing.JToolBar controlToolBar;
    private javax.swing.JComboBox<String> descriptorComboBox;
    private javax.swing.JLabel infoLabel;
    private javax.swing.JToolBar.Separator jSeparator1;
    private javax.swing.JScrollPane leftScrollPane;
    private javax.swing.JToolBar leftToolBar;
    private javax.swing.JPanel leftUpperPanel;
    private javax.swing.JButton removeFromDisplayButton;
    private javax.swing.JScrollPane rightScrollPane;
    private javax.swing.JLabel sizeLabel;
    // End of variables declaration//GEN-END:variables
}
