/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.bapedis.core.ui.components;

import java.util.Set;
import javax.swing.JLabel;
import org.bapedis.core.model.AttributesModel;
import org.bapedis.core.project.ProjectManager;
import org.jdesktop.swingx.JXHyperlink;
import org.openide.DialogDescriptor;
import org.openide.DialogDisplayer;
import org.openide.util.Lookup;
import org.openide.util.NbBundle;

/**
 *
 * @author loge
 */
public class FeatureInputPanel extends javax.swing.JPanel {

    protected final ProjectManager pc;
    protected final JLabel inputText;
    protected final JXHyperlink select;
    protected Set<String> descriptorKeys;
    
    public FeatureInputPanel() {
        initComponents();
        pc = Lookup.getDefault().lookup(ProjectManager.class);
        
        select = new JXHyperlink();
        select.setText(NbBundle.getMessage(FeatureInputPanel.class, "FeatureInputPanel.select.text"));
        select.setToolTipText(NbBundle.getMessage(FeatureInputPanel.class, "FeatureInputPanel.select.toolTipText"));
        select.setClickedColor(new java.awt.Color(0, 51, 255));
        select.setFocusPainted(false);
        select.setFocusable(false);
        select.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        select.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        select.addActionListener(new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setMolecularDescriptors();
            }
        });

        inputText = new JLabel();
        bottomPanel.add(new JLabel(NbBundle.getMessage(FeatureInputPanel.class, "FeatureInputPanel.input.label")));
        bottomPanel.add(inputText);
        bottomPanel.add(select);
        
    }
    
    public void setup(Set<String> descriptorKeys){
        this.descriptorKeys = descriptorKeys;
        setInputText();
    }
    
    private void setInputText() {
        if (descriptorKeys == null || descriptorKeys.isEmpty()) {
            inputText.setText(NbBundle.getMessage(FeatureInputPanel.class, "FeatureInputPanel.input.empty"));
        } else {
            inputText.setText(NbBundle.getMessage(FeatureInputPanel.class, "FeatureInputPanel.input.text", descriptorKeys.size()));
        }
    }    
    
    private void setMolecularDescriptors() {
        AttributesModel attrModel = pc.getAttributesModel();
        if (attrModel != null && descriptorKeys != null) {
            DescriptorSelectionPanel selectionPanel = new DescriptorSelectionPanel(attrModel);
            selectionPanel.setSelectedDescriptorKeys(descriptorKeys);
            
            DialogDescriptor dd = new DialogDescriptor(selectionPanel, NbBundle.getMessage(FeatureSelectionPanel.class, "FeatureSelectionPanel.DescriptorSelectionPanel.title"));
            dd.setOptions(new Object[]{DialogDescriptor.OK_OPTION, DialogDescriptor.CANCEL_OPTION});
            if (DialogDisplayer.getDefault().notify(dd) == DialogDescriptor.OK_OPTION) {
                Set<String> selected = selectionPanel.getSelectedDescriptorKeys();
                descriptorKeys.clear();
                descriptorKeys.addAll(selected);
                setInputText();
            }
        }
    }    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        buttonGroup1 = new javax.swing.ButtonGroup();
        option1Button = new javax.swing.JRadioButton();
        option2Button = new javax.swing.JRadioButton();
        bottomPanel = new javax.swing.JPanel();

        setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(FeatureInputPanel.class, "FeatureInputPanel.border.title"))); // NOI18N
        setLayout(new java.awt.GridBagLayout());

        buttonGroup1.add(option1Button);
        option1Button.setSelected(true);
        org.openide.awt.Mnemonics.setLocalizedText(option1Button, org.openide.util.NbBundle.getMessage(FeatureInputPanel.class, "FeatureInputPanel.option1Button.text_1")); // NOI18N
        option1Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                option1ButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        add(option1Button, gridBagConstraints);

        buttonGroup1.add(option2Button);
        org.openide.awt.Mnemonics.setLocalizedText(option2Button, org.openide.util.NbBundle.getMessage(FeatureInputPanel.class, "FeatureInputPanel.option2Button.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        add(option2Button, gridBagConstraints);

        java.awt.FlowLayout flowLayout1 = new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 2, 5);
        flowLayout1.setAlignOnBaseline(true);
        bottomPanel.setLayout(flowLayout1);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        add(bottomPanel, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void option1ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_option1ButtonActionPerformed
//        if (model != null) {
//            model.setRemoveUseless(false);
//            model.setRemoveRedundant(false);
//        }
    }//GEN-LAST:event_option1ButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel bottomPanel;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JRadioButton option1Button;
    private javax.swing.JRadioButton option2Button;
    // End of variables declaration//GEN-END:variables
}
