/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.bapedis.chemspace.searching;

import java.awt.Color;
import java.awt.BorderLayout;
import javax.swing.JPanel;
import org.bapedis.core.spi.alg.Algorithm;
import org.bapedis.core.spi.alg.AlgorithmSetupUI;
import org.bapedis.core.spi.alg.MultiQuery;
import org.bapedis.core.ui.components.MultiQueryPanel;
import org.bapedis.core.ui.components.ColorChooserButton;

/**
 *
 * @author Home
 */
public class EmbeddingQuerySeqPanel extends javax.swing.JPanel implements AlgorithmSetupUI, ColorChooserButton.ColorChangedListener {

    private EmbeddingQuerySeqAlg embeddingAlg;
    protected JPanel queryPanel;

    /**
     * Creates new form EmbeddingQuerySeqPanel
     */
    public EmbeddingQuerySeqPanel() {
        initComponents();
        ((ColorChooserButton)colorChooser).addColorChangedListener(this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        buttonGroup1 = new javax.swing.ButtonGroup();
        settingPanel = new javax.swing.JPanel();
        jLabelColor = new javax.swing.JLabel();
        colorChooser = new ColorChooserButton(Color.GRAY);
        extLabel = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jComboBoxKNN = new javax.swing.JComboBox<>();
        embeddingPanel = new javax.swing.JPanel();

        setLayout(new java.awt.GridBagLayout());

        settingPanel.setLayout(new java.awt.GridBagLayout());

        org.openide.awt.Mnemonics.setLocalizedText(jLabelColor, org.openide.util.NbBundle.getMessage(EmbeddingQuerySeqPanel.class, "EmbeddingQuerySeqPanel.jLabelColor.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        settingPanel.add(jLabelColor, gridBagConstraints);

        org.openide.awt.Mnemonics.setLocalizedText(colorChooser, org.openide.util.NbBundle.getMessage(EmbeddingQuerySeqPanel.class, "EmbeddingQuerySeqPanel.colorChooser.text"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        settingPanel.add(colorChooser, gridBagConstraints);

        org.openide.awt.Mnemonics.setLocalizedText(extLabel, org.openide.util.NbBundle.getMessage(EmbeddingQuerySeqPanel.class, "EmbeddingQuerySeqPanel.extLabel.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        settingPanel.add(extLabel, gridBagConstraints);

        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(EmbeddingQuerySeqPanel.class, "EmbeddingQuerySeqPanel.jLabel1.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        settingPanel.add(jLabel1, gridBagConstraints);

        jComboBoxKNN.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "3", "5", "7", "9", "11" }));
        jComboBoxKNN.setSelectedIndex(-1);
        jComboBoxKNN.setToolTipText(org.openide.util.NbBundle.getMessage(EmbeddingQuerySeqPanel.class, "EmbeddingQuerySeqPanel.jComboBoxKNN.toolTipText")); // NOI18N
        jComboBoxKNN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxKNNActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        settingPanel.add(jComboBoxKNN, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        add(settingPanel, gridBagConstraints);

        embeddingPanel.setLayout(new java.awt.BorderLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        add(embeddingPanel, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBoxKNNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxKNNActionPerformed
        if (embeddingAlg != null){
            embeddingAlg.setKnn(Integer.parseInt((String)jComboBoxKNN.getSelectedItem()));
        }
    }//GEN-LAST:event_jComboBoxKNNActionPerformed

    @Override
    public JPanel getSettingPanel(Algorithm algo) {
        embeddingAlg = (EmbeddingQuerySeqAlg) algo;
        jComboBoxKNN.setSelectedItem(String.valueOf(embeddingAlg.getKnn()));        
        ((ColorChooserButton)colorChooser).setSelectedColor(embeddingAlg.getColor());
        queryPanel = new MultiQueryPanel((MultiQuery) embeddingAlg);

        embeddingPanel.removeAll();
        embeddingPanel.add(queryPanel, BorderLayout.CENTER);
        embeddingPanel.revalidate();
        embeddingPanel.repaint();
        return this;
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton colorChooser;
    private javax.swing.JPanel embeddingPanel;
    private javax.swing.JLabel extLabel;
    private javax.swing.JComboBox<String> jComboBoxKNN;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabelColor;
    private javax.swing.JPanel settingPanel;
    // End of variables declaration//GEN-END:variables

    @Override
    public void colorChanged(Color newColor) {
        if (embeddingAlg != null){
            embeddingAlg.setColor(((ColorChooserButton)colorChooser).getSelectedColor());
        }
    }
}
