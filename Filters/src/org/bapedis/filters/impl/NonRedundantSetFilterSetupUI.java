/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.bapedis.filters.impl;

import java.awt.BorderLayout;
import java.beans.PropertyChangeListener;
import javax.swing.JPanel;
import org.bapedis.core.model.SequenceAlignmentModel;
import org.bapedis.core.spi.filters.Filter;
import org.bapedis.core.spi.filters.FilterSetupUI;
import org.bapedis.core.ui.components.SequenceAlignmentPanel;
import org.openide.util.Exceptions;

/**
 *
 * @author loge
 */
public class NonRedundantSetFilterSetupUI extends javax.swing.JPanel implements FilterSetupUI{

    protected NonRedundantSetFilter filter;
    protected SequenceAlignmentModel alignmentModel;
    
    /**
     * Creates new form NonRedundantSetFilterSetupUI
     */
    public NonRedundantSetFilterSetupUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        centerPanel = new javax.swing.JPanel();

        setLayout(new java.awt.GridBagLayout());

        centerPanel.setLayout(new java.awt.BorderLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(centerPanel, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    @Override
    public JPanel getEditPanel(Filter filter) {
        this.filter = (NonRedundantSetFilter) filter;
        try {
            alignmentModel = (SequenceAlignmentModel) this.filter.getAlignmentModel().clone();
        } catch (CloneNotSupportedException ex) {
            Exceptions.printStackTrace(ex);
        }        
        centerPanel.removeAll();
        centerPanel.add(new SequenceAlignmentPanel(alignmentModel), BorderLayout.CENTER);
        centerPanel.revalidate();
        centerPanel.repaint();        
        return this;
    }

    @Override
    public boolean isValidState() {
        return true;
    }

    @Override
    public void saveSettings() {
        filter.setAlignmentModel(alignmentModel);
    }

    @Override
    public void cancelSettings() {
        filter = null;
    }

    @Override
    public void addValidStateListener(PropertyChangeListener listener) {
    }

    @Override
    public void removeValidStateListener(PropertyChangeListener listener) {        
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel centerPanel;
    // End of variables declaration//GEN-END:variables
}
