/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package org.netbeans.jmol.displayer;

import java.awt.BorderLayout;
import java.awt.Point;
import org.netbeans.api.settings.ConvertAsProperties;
import org.netbeans.jmol.api.LoadScriptCapability;
import org.openide.awt.ActionID;
import org.openide.awt.ActionReference;
import org.openide.util.Lookup.Result;
import org.openide.util.LookupEvent;
import org.openide.util.LookupListener;
import org.openide.windows.TopComponent;
import org.openide.util.NbBundle.Messages;
import org.openide.util.Utilities;
import org.openscience.jmol.app.jmolpanel.JmolPanel;

/**
 * Top component which displays something.
 */
@ConvertAsProperties(dtd = "-//org.netbeans.examples.modules.povfile//Jmol//EN",
autostore = false)
@TopComponent.Description(preferredID = "JmolTopComponent",
//iconBase="SET/PATH/TO/ICON/HERE", 
persistenceType = TopComponent.PERSISTENCE_NEVER)
@TopComponent.Registration(mode = "editor", openAtStartup = true)
@ActionID(category = "Window", id = "org.netbeans.examples.modules.povfile.JmolTopComponent")
@ActionReference(position=5, path = "Menu/Window" /*
 * , position = 333
 */)
@TopComponent.OpenActionRegistration(displayName = "#CTL_JmolAction",
preferredID = "JmolTopComponent")
@Messages({
    "CTL_JmolAction=Molecule Viewer",
    "CTL_JmolTopComponent=General",
    "HINT_JmolTopComponent=This is a Molecule Editor"
})
public final class JmolTopComponent extends TopComponent implements LookupListener {

    JmolPanel panel;

    public JmolTopComponent() {
        initComponents();
        setName(Bundle.CTL_JmolTopComponent());
        setToolTipText(Bundle.HINT_JmolTopComponent());

        //putClientProperty("print.printable", Boolean.TRUE); // NOI18N

        setLayout(new BorderLayout());

        JmolPanel p = new JmolPanel(null, null, this, null, 600, 600, "", new Point(200, 200));
        add(p);
        p.setVisible(true);

        setDisplayName("Empty");

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
    Result<LoadScriptCapability> allLSC;

    @Override
    public void componentOpened() {
        allLSC = Utilities.actionsGlobalContext().lookupResult(LoadScriptCapability.class);
        allLSC.addLookupListener(this);
    }

    @Override
    public void componentClosed() {
//        allLSC.removeLookupListener(this);
    }

    void writeProperties(java.util.Properties p) {
        // better to version settings since initial version as advocated at
        // http://wiki.apidesign.org/wiki/PropertyFiles
        p.setProperty("version", "1.0");
        // TODO store your settings
    }

    void readProperties(java.util.Properties p) {
        String version = p.getProperty("version");
        // TODO read your settings according to their version
    }

    @Override
    public void resultChanged(LookupEvent le) {
        for (LoadScriptCapability lsc : allLSC.allInstances()) {
            JmolTopComponent jtc = new JmolTopComponent();
            jtc.open();
            jtc.requestActive();
            panel = new JmolPanel(null, null, new JmolTopComponent(), null, 600, 600, "", new Point(200, 200));
            panel.getViewer().script(lsc.getScript());
            jtc.add(panel);
            jtc.setDisplayName(lsc.getName());
        }
    }
}
