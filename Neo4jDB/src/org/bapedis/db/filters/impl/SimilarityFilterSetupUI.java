/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.bapedis.db.filters.impl;

import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeSupport;
import javax.swing.JPanel;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import org.bapedis.db.filters.spi.Filter;
import org.bapedis.db.filters.spi.FilterSetupUI;

/**
 *
 * @author loge
 */
public class SimilarityFilterSetupUI extends javax.swing.JPanel implements FilterSetupUI {

    protected boolean validState;
    protected SimilarityFilter simFilter;
    protected final PropertyChangeSupport changeSupport;

    /**
     * Creates new form SimilarityFilterSetupUI
     */
    public SimilarityFilterSetupUI() {
        initComponents();
        changeSupport = new PropertyChangeSupport(this);
        validState = false;
        jSeqTextArea.getDocument().addDocumentListener(new DocumentListener() {
            
            @Override
            public void insertUpdate(DocumentEvent e) {
                updateValidState();
            }
            
            @Override
            public void removeUpdate(DocumentEvent e) {
                updateValidState();
            }
            
            @Override
            public void changedUpdate(DocumentEvent e) {
                
            }
        });
        jKTextField.getDocument().addDocumentListener(new DocumentListener() {
            
            @Override
            public void insertUpdate(DocumentEvent e) {
                updateValidState();
            }
            
            @Override
            public void removeUpdate(DocumentEvent e) {
                updateValidState();
            }
            
            @Override
            public void changedUpdate(DocumentEvent e) {
                
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jSeqTextArea = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        jKTextField = new javax.swing.JTextField();

        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(SimilarityFilterSetupUI.class, "SimilarityFilterSetupUI.jLabel1.text")); // NOI18N

        jSeqTextArea.setColumns(20);
        jSeqTextArea.setRows(5);
        jScrollPane1.setViewportView(jSeqTextArea);

        org.openide.awt.Mnemonics.setLocalizedText(jLabel2, org.openide.util.NbBundle.getMessage(SimilarityFilterSetupUI.class, "SimilarityFilterSetupUI.jLabel2.text")); // NOI18N

        jKTextField.setText(org.openide.util.NbBundle.getMessage(SimilarityFilterSetupUI.class, "SimilarityFilterSetupUI.jKTextField.text")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 351, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jKTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 182, Short.MAX_VALUE))
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jKTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField jKTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jSeqTextArea;
    // End of variables declaration//GEN-END:variables

    @Override
    public JPanel getEditPanel(Filter filter) {
        simFilter = (SimilarityFilter) filter;
        String seq = simFilter.getSeq();
        if (seq != null && !jSeqTextArea.getText().equals(seq)) {
            jSeqTextArea.setText(seq);
        }
        int k = simFilter.getK();
        if (k > 0 && !jKTextField.getText().equals(k)) {
            jKTextField.setText(String.valueOf(k));
        }
        return this;
    }

    @Override
    public void finishSettings() {
        simFilter.setSeq(jSeqTextArea.getText());
        simFilter.setK(Integer.parseInt(jKTextField.getText()));
    }

    @Override
    public void cancelSettings() {
        simFilter = null;
    }

    @Override
    public boolean isValidState() {

        return true;
    }

    @Override
    public void addValidStateListener(PropertyChangeListener listener) {
        changeSupport.addPropertyChangeListener(listener);
    }

    @Override
    public void removeValidStateListener(PropertyChangeListener listener) {
        changeSupport.removePropertyChangeListener(listener);
    }

    private void updateValidState() {
        boolean oldValidState = validState;
        validState = true;
        if (jSeqTextArea.getText().isEmpty()) {
            validState = false;
        }
        if (validState) {
            try {
                Integer.parseInt(jKTextField.getText());
            } catch (NumberFormatException ex) {
                validState = false;
            }
        }
        changeSupport.firePropertyChange(VALID_STATE, oldValidState, validState);
    }
}
