/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.bapedis.network.wizard;

import java.util.LinkedList;
import java.util.List;
import javax.swing.JPanel;
import org.bapedis.core.model.AttributesModel;
import org.bapedis.core.model.MolecularDescriptor;
import org.bapedis.core.project.ProjectManager;
import org.bapedis.core.ui.components.AllDescriptorTable;
import org.bapedis.network.impl.CSNAlgorithm;
import org.bapedis.network.model.MDOptionModel;
import org.openide.util.Lookup;
import org.openide.util.NbBundle;

public final class CSNVisualPanel2 extends JPanel {

    private final MDOptionModel optionModel;
    private final AllDescriptorTable table;

    /**
     * Creates new form CSNVisualPanel2
     */
    public CSNVisualPanel2(CSNAlgorithm csnAlgo) {
        this.optionModel = csnAlgo.getMdOptionModel();
        initComponents();

        // Descriptor Table        
        table = new AllDescriptorTable();
        jScrollPane.setViewportView(table);

        ProjectManager pc = Lookup.getDefault().lookup(ProjectManager.class);
        AttributesModel attrModel = pc.getAttributesModel();
        List<MolecularDescriptor> featureList = new LinkedList<>();
        // Populate feature list                
        for (String key : attrModel.getMolecularDescriptorKeys()) {
            for (MolecularDescriptor desc : attrModel.getMolecularDescriptors(key)) {
                featureList.add(desc);
            }
        }
        if (featureList.size() < CSNAlgorithm.MIN_AVAILABLE_FEATURES) {
            jOption2.setEnabled(false);
            optionModel.setOptionIndex(MDOptionModel.NEW_MD);
        }

        switch (optionModel.getOptionIndex()) {
            case MDOptionModel.AVAILABLE_MD:
                jOption2.setSelected(true);
                break;
            case MDOptionModel.NEW_MD:
                jOption1.setSelected(true);
        }
    }

    @Override
    public String getName() {
        return NbBundle.getMessage(CSNVisualPanel2.class, "CSNVisualPanel2.name");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        buttonGroup1 = new javax.swing.ButtonGroup();
        jScrollPane = new javax.swing.JScrollPane();
        jQuestionLabel = new javax.swing.JLabel();
        jOption1 = new javax.swing.JRadioButton();
        jOption2 = new javax.swing.JRadioButton();

        setMinimumSize(new java.awt.Dimension(460, 400));
        setPreferredSize(new java.awt.Dimension(460, 400));
        setLayout(new java.awt.GridBagLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(jScrollPane, gridBagConstraints);

        org.openide.awt.Mnemonics.setLocalizedText(jQuestionLabel, org.openide.util.NbBundle.getMessage(CSNVisualPanel2.class, "CSNVisualPanel2.jQuestionLabel.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        add(jQuestionLabel, gridBagConstraints);

        buttonGroup1.add(jOption1);
        org.openide.awt.Mnemonics.setLocalizedText(jOption1, org.openide.util.NbBundle.getMessage(CSNVisualPanel2.class, "CSNVisualPanel2.jOption1.text")); // NOI18N
        jOption1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jOption1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        add(jOption1, gridBagConstraints);

        buttonGroup1.add(jOption2);
        org.openide.awt.Mnemonics.setLocalizedText(jOption2, org.openide.util.NbBundle.getMessage(CSNVisualPanel2.class, "CSNVisualPanel2.jOption2.text")); // NOI18N
        jOption2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jOption2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        add(jOption2, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void jOption1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jOption1ActionPerformed
        if (optionModel.getOptionIndex() != MDOptionModel.NEW_MD) {
            optionModel.setOptionIndex(MDOptionModel.NEW_MD);
        }        
        table.setEnabled(true);
    }//GEN-LAST:event_jOption1ActionPerformed

    private void jOption2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jOption2ActionPerformed
        if (optionModel.getOptionIndex() != MDOptionModel.AVAILABLE_MD) {
            optionModel.setOptionIndex(MDOptionModel.AVAILABLE_MD);
        }
        table.setEnabled(false);
    }//GEN-LAST:event_jOption2ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JRadioButton jOption1;
    private javax.swing.JRadioButton jOption2;
    private javax.swing.JLabel jQuestionLabel;
    private javax.swing.JScrollPane jScrollPane;
    // End of variables declaration//GEN-END:variables

}
